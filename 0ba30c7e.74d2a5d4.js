(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{119:function(e,t,r){"use strict";r.d(t,"a",(function(){return c})),r.d(t,"b",(function(){return b}));var o=r(0),a=r.n(o);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=a.a.createContext({}),s=function(e){var t=a.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),c=s(r),p=o,b=c["".concat(i,".").concat(p)]||c[p]||h[p]||n;return r?a.a.createElement(b,l(l({ref:t},d),{},{components:r})):a.a.createElement(b,l({ref:t},d))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<n;d++)i[d]=r[d];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},61:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return u})),r.d(t,"default",(function(){return s}));var o=r(2),a=r(6),n=(r(0),r(119)),i={id:"flash",title:"Flashing Firmware to your keyboard",slug:"/flash"},l={unversionedId:"flash",id:"flash",isDocsHomePage:!1,title:"Flashing Firmware to your keyboard",description:"nRF52832 Boards",source:"@site/docs/flashing_firmware.md",slug:"/flash",permalink:"/docs/flash",editUrl:"https://github.com/jpconstantineau/BlueMicro_BLE/tree/documentation-docusaurus/documentation/docs/flashing_firmware.md",version:"current",sidebar:"someSidebar",previous:{title:"Building Firmware",permalink:"/docs/build"},next:{title:"Adding a new Keyboard",permalink:"/docs/add"}},u=[{value:"nRF52832 Boards",id:"nrf52832-boards",children:[{value:"Serial Upload using Arduino IDE",id:"serial-upload-using-arduino-ide",children:[]},{value:"SWD Upload",id:"swd-upload",children:[]}]},{value:"nRF52840 Boards",id:"nrf52840-boards",children:[{value:"Using UF2 Upload Method",id:"using-uf2-upload-method",children:[]},{value:"Using Serial Upload Method and Arduino Tooling",id:"using-serial-upload-method-and-arduino-tooling",children:[]}]}],d={rightToc:u};function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(n.b)("wrapper",Object(o.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"nrf52832-boards"},"nRF52832 Boards"),Object(n.b)("p",null,"The nRF52832 does not have on-chip USB support.  As such, you need to use the on board serial adapter to connect your computer to the nRF52832 for flashing a new firmware.  Depending on whether your hardware has on-board serial or not, you will need a serial USB adapter.  Note that the hardware is +3.3V.  As such, a standard +5V serial adapter may damage the nRF52 processor."),Object(n.b)("p",null,'On reboot, the Adafruit_nRF52_Bootloader briefly listens to the serial UART for a firmware upgrade connection.  Note that unlike for the nRF52840, the bootloader does not provide for a "double-reset" trigger to go (and remain) into firmware upgrade mode.  Because of the very brief period in which the bootloader listens for a firmware update, it is recommended to use a controller which has the serial adapter on-board with the necessary reset circuitry installed.  This circuitry connects the DTR line from the serial chip to the reset line through a capacitor. See the circuit diagram for the ',Object(n.b)("a",Object(o.a)({parentName:"p"},{href:"https://cdn-learn.adafruit.com/assets/assets/000/052/793/original/microcontrollers_revgsch.png?1523067417"}),"Adafruit Feather nrf52832")," for an example of such circuitry."),Object(n.b)("h3",{id:"serial-upload-using-arduino-ide"},"Serial Upload using Arduino IDE"),Object(n.b)("p",null,"This step assumes you have the firmware already initialized and downloaded from the ",Object(n.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/jpconstantineau/BlueMicro_Builder"}),"BlueMicro Builder")," Github actions tool.  You need the entire repository and not the artifact generated by the github action."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Start the Arduino IDE"),Object(n.b)("li",{parentName:"ul"},"Open the firmware"),Object(n.b)("li",{parentName:"ul"},'Select the board from the Arduino IDE "Tools -> Board" Menu'),Object(n.b)("li",{parentName:"ul"},'Connect your keyboard. A new serial port should show up in the "Tools -> Port" menu. '),Object(n.b)("li",{parentName:"ul"},'Select the serial port of your keyboard in the "Tools -> Port" menu. '),Object(n.b)("li",{parentName:"ul"},"Compile your keyboard using the \u2714\ufe0f button in the toolbar"),Object(n.b)("li",{parentName:"ul"},"Flash (upload) your keyboard using the \u27a1\ufe0f button in the toolbar")),Object(n.b)("h3",{id:"swd-upload"},"SWD Upload"),Object(n.b)("p",null,'If you do not have an on-board serial adapter that triggers the reset circuitry, it may be easier to flash the nRF52832 using a SWD programmer.  At this point, this upload method is not considered "easy" from a setup point of view as the methods differs between SWD programmers.  You can use the hex or bin files provided as part of the github action artifact.'),Object(n.b)("h2",{id:"nrf52840-boards"},"nRF52840 Boards"),Object(n.b)("p",null,"The Adafruit_nRF52_Bootloader supports both serial and UF2 flashing for nRF52840 chips."),Object(n.b)("h3",{id:"using-uf2-upload-method"},"Using UF2 Upload Method"),Object(n.b)("p",null,"This step assumes you have the firmware already initialized and compiled using the ",Object(n.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/jpconstantineau/BlueMicro_Builder"}),"BlueMicro Builder")," Github actions tool.  You just need to download the GitHub Actions artifact and uncompress the artifact zip file. It will contain the UF2 file you need."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Have your UF2 file ready"),Object(n.b)("li",{parentName:"ul"},"Connect your keyboard to your computer"),Object(n.b)("li",{parentName:"ul"},'A new "drive" should show up for your keyboard'),Object(n.b)("li",{parentName:"ul"},"Copy (drag/drop) the UF2 file to this drive"),Object(n.b)("li",{parentName:"ul"},"Once the copy is complete, the keyboard will reset automatically.  This may cause the operating system to give you a error (failed to copy) as it won't have access to the drive anymore to verify that the copy was successful.  This is OK: the firmware has been flashed.")),Object(n.b)("h3",{id:"using-serial-upload-method-and-arduino-tooling"},"Using Serial Upload Method and Arduino Tooling"),Object(n.b)("p",null,"This step assumes you have the firmware already initialized and downloaded from the ",Object(n.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/jpconstantineau/BlueMicro_Builder"}),"BlueMicro Builder")," Github actions tool.  You need the entire repository and not the artifact generated by the github action."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Start the Arduino IDE"),Object(n.b)("li",{parentName:"ul"},"Open the firmware"),Object(n.b)("li",{parentName:"ul"},'Select the board from the Arduino IDE "Tools -> Board" Menu'),Object(n.b)("li",{parentName:"ul"},'Connect your keyboard. A new serial port should show up in the "Tools -> Port" menu. Note that you may need to "double-reset" your board to be able to select the correct serial port.'),Object(n.b)("li",{parentName:"ul"},'Select the serial port of your keyboard in the "Tools -> Port" menu. '),Object(n.b)("li",{parentName:"ul"},"Compile your keyboard using the \u2714\ufe0f button in the toolbar"),Object(n.b)("li",{parentName:"ul"},"Flash (upload) your keyboard using the \u27a1\ufe0f button in the toolbar")))}s.isMDXComponent=!0}}]);